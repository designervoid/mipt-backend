# -*- coding: utf-8 -*-
"""Text classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DTnr1LBiRd8d8WqMWLmppkoEXuFhP5-1
"""

from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer , TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
import pickle

texts = [['cантехник','раковина','ремонт сантехнического оборудования','cломалась машинка', 'починить машинку', 'стиральная машинка',
          'промывка системы отопления перед началом отопительного сезона','своевременная замена изношенных узлов, частей и деталей','устранение засоров в трубах водоснабжения и канализации',
          'монтаж, установка, настройка сантехники,','потек кран', 'засорился унитаз' ,'надо срочно вызывать сантехника','перекрыть воду','не смывается туалет', 'засорение раковины', 'вода туалет ванна', 'начал подтекать кран ','течет унитаз', 'протечка стояков' ],
         ['электрик','перегорели провода','розетки', 'проводка и нагрузка на сеть', 'выключили свет', 'перепабды напряжения', 'работа с электроприборами', 'короткое замыкание'],
         ['санитарная обработка', 'санитар','муравьи', 'тараканы', 'насекомые', 'мухи', 'животные', 'дезинфекционная', 'уничтожение паразитов', 'жуки', 'убить насекомых', 'завелись грызуны и мыши'], 
         ['плотник', 'ножка стула', 'ручка', 'дверь', 'починить стул', 'кровать', 'сломался стул'],
         ['заказать мебель', 'тумбочка', 'заказать стул', 'заказать стол', 'заказать шкаф'],
         ['крупногабаритные вещи', 'ввоз', 'вывоз', 'внести', 'вынести', 'заезд', 'выезд', 'холодильник']]
text=[]
texts_labels=[]
for i in range(len(texts)):
    texts_labels += [i]*len(texts[i])
    text+=texts[i]


text_clf = Pipeline([
                     ('tfidf', TfidfVectorizer()),
                     ('clf', RandomForestClassifier(n_estimators=250))
                     ])
 
text_clf.fit(text, texts_labels)


def role(argument):
    switcher = {
        0: "сантехник",
        1: "электрик",
        2: "санитарная обработка",
        3: "плотник",
        4: "заказать мебель",
        5: "крупногабаритные вещи"
    }
    print (switcher.get(argument))

message='вывезти холодильник'
with open('text_clf', 'wb') as picklefile:
    pickle.dump(text_clf,picklefile)
with open('text_clf', 'rb') as training_model:
    model = pickle.load(training_model)
res = text_clf.predict([message])
role(res[0])

